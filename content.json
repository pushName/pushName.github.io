{"pages":[{"title":"404 Not Found：该页无法显示","date":"2019-05-13T12:26:28.718Z","updated":"2019-05-13T03:03:12.015Z","comments":false,"path":"/404.html","permalink":"https://pushname.github.io//404.html","excerpt":"","text":""},{"title":"书单","date":"2019-05-13T12:26:28.690Z","updated":"2019-05-13T09:35:35.678Z","comments":true,"path":"books/index.html","permalink":"https://pushname.github.io/books/index.html","excerpt":"","text":""},{"title":"关于","date":"2019-05-13T12:26:28.724Z","updated":"2019-05-13T03:03:12.018Z","comments":false,"path":"about/index.html","permalink":"https://pushname.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"分类","date":"2019-05-13T12:26:28.695Z","updated":"2019-05-13T03:03:12.020Z","comments":false,"path":"categories/index.html","permalink":"https://pushname.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2019-05-13T12:26:28.700Z","updated":"2019-05-13T03:03:12.023Z","comments":true,"path":"links/index.html","permalink":"https://pushname.github.io/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-05-13T12:26:28.708Z","updated":"2019-05-13T03:03:12.025Z","comments":false,"path":"tags/index.html","permalink":"https://pushname.github.io/tags/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2019-05-13T12:26:28.705Z","updated":"2019-05-13T03:03:12.023Z","comments":false,"path":"repository/index.html","permalink":"https://pushname.github.io/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"vim基本操作","slug":"vim基本操作命令","date":"2019-05-20T15:02:50.050Z","updated":"2019-05-21T00:15:05.002Z","comments":true,"path":"2019/05/20/vim基本操作命令/","link":"","permalink":"https://pushname.github.io/2019/05/20/vim基本操作命令/","excerpt":"","text":"Vim 是 Linux 系统上的最著名的文本/代码编辑器，也是早年的 Vi 编辑器的加强版，而 gVim 则是其 Windows 版。它的最大特色是完全使用键盘命令进行编辑，脱离了鼠标操作虽然使得入门变得困难，但上手之后键盘流的各种巧妙组合操作却能带来极为大幅的效率提升。因此 Vim 和现代的编辑器（如 Sublime Text）有着非常巨大的差异，而且入门学习曲线陡峭，需要记住很多按键组合和命令，如今被看作是高手、Geek们专用的编辑器。尽管 Vim 已经是古董级的软件，但还是有无数新人迎着困难去学习使用，可见其经典与受欢迎程度。另外，由于 Vim 的可配置性非常强，各种插件、语法高亮配色方案等多不胜数，无论作为代码编辑器或是文稿撰写工具都非常给力……Vim的三种模式1.正常（normal）模式，缺省的编辑模式；下面如果不加特殊说明，提到的命令都直接在正常模式下输入；任何其它模式中都可以通过键盘上的 Esc 键回到正常模式。2.命令（command）模式，用于执行较长、较复杂的命令；在正常模式下输入“:”（一般命令）、“/”（正向搜索）或“?”（反向搜索）即可进入该模式；命令模式下的命令要输入回车键（Enter）才算完成。3.插入（insert）模式，输入文本时使用；在正常模式下键入“i”（insert）或“a”（append）即可进入插入模式（也有另外一些命令，如“c”，也可以进入插入模式，但这些命令有其它的作用）。4.可视（visual）模式，用于选定文本块；可以在正常模式下输入“v”（小写）来按字符选定，输入“V”（大写）来按行选定，或输入“Ctrl-V”来按方块选定。选择（select）模式，与普通的 Windows 编辑器较为接近的选择文本块的方式；在以可视模式和选择模式之一选定文本块之后，可以使用“Ctrl-G”切换到另一模式——该模式很少在 Linux 上使用。1. 基本操作1.1 编辑–&gt;输入：i: 在当前光标所在字符的前面，转为输入模式； a: 在当前光标所在字符的后面，转为输入模式； o: 在当前光标所在行的下方，新建一行，并转为输入模式； I：在当前光标所在行的行首，转换为输入模式 A：在当前光标所在行的行尾，转换为输入模式 O：在当前光标所在行的上方，新建一行，并转为输入模式； 1.2 输入–&gt;编辑：ESC 1.3 编辑–&gt;末行：(英文输入法冒号): 1.4 末行–&gt;编辑：ESC, ESC 注：输入模式和末行模式之间不能直接切换，默认处于编辑模式1.5 关闭文件末行模式关闭文件123456:q 退出:wq 保存并退出:q! 不保存并退出:w 保存:w! 强行保存:wq --&gt; :x1.6 保存文件12:w newfile 此时Vi将把当前文件的内容保存到指定的newfile中。:w! newfile 用文件的当前内容替换newfile中原有内容1.7 使用vim编辑多个文件1234567vim FILE1 FILE2 FILE3:next 切换至下一个文件:prev 切换至前一个文件:last 切换至最后一个文件:first 切换至第一个文件:q退出当前文件:qa 全部退出1.8 复制,粘贴与删除12345yy|2yy 复制行dd|2dd 删除、剪切行p粘贴到下一行: 1,10d 删除1行至10行。: 1,.d 删除从第一行到光标所在行。1.9 快速移动123456789101112131415zz 把当前行置为屏幕正中央。zt 把当前行置于屏幕顶端。t意为top。zb 把当前行置于屏幕底端。b意为bottom。gg 到文档首行G 直接跳转到文件结尾行（这是大写G）:58 也是直接到58行^|$定位到行首，行尾dG从当前行删到文档最后一行w 下一个wordW 下一个word(跳过标点符号)b 前一个worde 跳到目前word的尾端0 跳到目前行的开头^ 跳到目前行第一个非空白字元$ 跳到行尾2.0 搜寻与查找123456/application 查找application出现在第几行？/xxxx 搜寻xxxx# 往前搜寻目前游标所在的字(word)* 往後搜寻目前游标所在的字(word)fx 在目前行往后搜寻字元xgd 跳到目前游标所在的字(word)的定义位置2.1 撤销与替换1234:16,31s/application/mei/gc 把16~31行之间的application替换为mei，并且在替换的时候给提示:16,31s/application/mei/g 不给提示替换(c表示confirm)u 撤销（反悔了，撤销操作）；或者:q!不保存，那么所有的操作都不保存了&lt;Ctrl&gt;-R - 重做，反转撤消，即它是对撤消的撤消。2.1 分割视窗1234567:split 分割視窗(可加檔名順便開啟另一檔案):diffsplit xxx 以分割視窗和檔案xxx做比較(diff)Ctrl-W p 跳到前一個分割視窗(在兩個分割窗來回切換)Ctrl-W j 跳到下面的分割窗Ctrl-W h 跳到左邊的分割窗Ctrl-W k 跳到上面的分割窗Ctrl-W l 跳到右邊的分割窗","categories":[],"tags":[]},{"title":"makedown语法","slug":"Markdown基本语法","date":"2019-05-20T10:55:15.478Z","updated":"2019-05-21T00:15:05.006Z","comments":true,"path":"2019/05/20/Markdown基本语法/","link":"","permalink":"https://pushname.github.io/2019/05/20/Markdown基本语法/","excerpt":"","text":"这篇文章将会介绍简单的md语法Markdown语法的基本介绍1.1标题123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题预览：一级标题二级标题三级标题四级标题五级标题六级标题1.2标签语法：TAGS：内容 或直接标签：内容 ，即 在编辑区任意行的列首位置输入tags/标签：关键词1 关键词2 ， 多个用空格隔开。示例:123标签：教程 Markdown或TAGS: 教程 Markdown1.3 目录（大纲）导出语法 在段落中填写 [TOC] （toc小写也可以）以显示各标题为结构的目录（大纲）导航。示例：1[TOC]1.4 强调或突出1.4.1斜体语法： _斜体_ 或 斜体 在文字两边加 单下底线 或 单星号示例：World World1.5 删除线语法:~~ ~~ 在文字两边加 双波浪号(快速记忆：单斜双粗两波删)示例: 删除线1~~删除线~~1.6 下划线语法:在空白行下方添加三条“-”横线。（前面讲过在文字下方添加“-”，实现的2级标题）示例:123空白行下面才可以，不然会变成二级标题。---1.7 段落与分割1.7.1 普通段落的分割语法:用空行分隔，连着多个空行也是一个效果，只能空一行的间距。无论空几行有几个空格只显示一个，与html类似。1.7.2 水平分割线语法: 个及以上的 星号***或 减号—或 下底线___来表示。示例:123***---___1.7.3 强制换行语法: 在行尾输入两个空格示例:jjffdd123jjff //这里留了两个空行dd2.0 Markdown中级语法教程2.1 链接2.1.1 网页链接（内联风格）1##### 语法: [链接文字](http://链接地址\"（空格）鼠标悬停显示文字（可选）\")，\"（空格）鼠标悬停显示文字\"非必须项，在pc浏览器中能看到效果，手机移动端因无鼠标效果无法直接体现。示例:小智的博客1[小智的博客](http://studyz.club \"千万不要点呀！\")2.1.2 链接的快速定义语法:1234567前面文档中引用链接的语法为：[链接文字][id]前后id要匹配一致，一般为数字，这样可以在文档的其他任意地方快速插入这个链接。后面定义链接的语法为：[id]:（空格）http://链接地址（空格）\"鼠标悬停显示文字（可选）\"后面的语法必须在列首并单独一行，适合前期不知道网址，后面再加入的情况。示例:阿智的博客123[阿智的博客][1]//注意中间有东西[1]: http://studyz.club \"千万不要点啊!\"2.13 链接的自动展示语法: 你也可以直接将这个链接打出来示例:http://studyz.club2.2 列表2.2.1 有序列表语法: 直接数字加英文句点加空格（最多三个空格）和文字。示例:列表1列表2121. 列表1 //这后面加两个空格就会变成层次列表2. 列表2列表11.1列表1.12.2.2 无序列表语法: 文字前面加 星号空格*（空格）或 短横空格-（空格）或 加号+（空格）表示。示例:列表1列表2列表3123* 列表1- 列表2+ 列表32.2.3 多重列表语法: 单层列表项缩进1个空格就可以往后面叠加子层的列表示例：首层列表项（有序）第二层列表项1(嵌套的列表可以是有序的 )第二层列表项2(格式和正常的有序、无序列表没有差异)第三层列表项1第三层列表项21.第四层列表项11.第五层列表项212345671. 首层列表项（有序）2. 第二层列表项1(嵌套的列表可以是有序的 )3. 第二层列表项2(格式和正常的有序、无序列表没有差异)4. 第三层列表项15. 第三层列表项2 //这里有两个空格1.第四层列表项1 //这里有两个空格1.第五层列表项22.3 引用2.3.1 文字引用语法: 段落前面添加大于号和空格&gt; （空格），就能够形成引用段落。示例1:湖心亭看雪张岱崇祯五年十二月，余住西湖。大雪三日，湖中人鸟声俱绝。是日更定矣，余拏一小舟，拥毳衣炉火，独往湖心亭看雪。雾凇沆砀，天与云与山与水，上下一白。湖上影子，惟长堤一痕、湖心亭一点，与余舟一芥、舟中人两三粒而已。到亭上，有两人铺毡对坐，一童子烧酒炉正沸。见余，大喜曰：“湖中焉得更有此人！”拉余同饮。余强饮三大白而别。问其姓氏，是金陵人，客此。及下船，舟子喃喃曰：“莫说相公痴，更有痴似相公者！”1234&gt; &lt;center&gt;湖心亭看雪 张岱&lt;/center&gt;崇祯五年十二月，余住西湖。大雪三日，湖中人鸟声俱绝。是日更定矣，余拏一小舟，拥毳衣炉火，独往湖心亭看雪。雾凇沆砀，天与云与山与水，上下一白。湖上影子，惟长堤一痕、湖心亭一点，与余舟一芥、舟中人两三粒而已。到亭上，有两人铺毡对坐，一童子烧酒炉正沸。见余，大喜曰：“湖中焉得更有此人！”拉余同饮。余强饮三大白而别。问其姓氏，是金陵人，客此。及下船，舟子喃喃曰：“莫说相公痴，更有痴似相公者！”2.3.2 多层引用这是第一层的文字引用这是第二层嵌套的引用这是第三层的嵌套的引用123&gt; 这是第一层的文字引用 &gt; &gt; 这是第二层嵌套的引用&gt; &gt; &gt; 这是第三层的嵌套的引用2.4 添加影像图片2.4.1 插入图片语法:1使用 ![图片描述](图片网络/本地图片地址（空格）“鼠标悬停显示文字（可选）”)示例：1![红猪](Markdown基本语法/timg.jpg \"千万不要啊！\")2.4.2 图片链接的定义语法:12345[id]:（空格）/url/to/img.jpg\"鼠标悬停显示文字（可选）\"后面定义链接的语法为：![图片描述][id]：本地/网络图片地址 \"鼠标悬停显示文字（可选）\"后面的语法必须在列首并单独一行12[2]: Markdown基本语法/timg.jpg \"千万要啊!\"![红猪][2]2.5 代码块2.5.1 行内(内联)代码语法: 使用内容 表示行内 代码块。即 在文字左右使用反引号包含（键盘数字“1”前面的波浪号英文输入状态时能打出）。示例:莫说相公痴，更有痴似相公者!1莫说相公痴，更有`痴`似相公者!2.5.2 段落文本代码块语法: 每行缩进4个空格或 1个 Tab表示这是一个代码块，此行左侧有四个不可见的空格。这是代码块，会自动添加行号，注意要与前面文字空行，不然没有引用效果，就是这么简单，非常实用呀。 2.5.3 代码块语法:1上下三个反引号tab键上面英文输入时可打出，上面三个可以填语言类型。2.6 表格语法: 第一行文字粗体表示每列名称，在下方加至少3个横杠-符。用|分隔各列，不需要手动对齐。表格中的元素可以使用粗体、斜体、高亮等。使用反斜杠\\可以对符号转义。三个或以上下划线_或者|中划线-可以画一条横线，但是中划线要注意与二级标题区分开。一行一列标题一行二列标题一行三列标题二行一列二行二列二行三列三行一列三行二列三行三列1234一行一列标题|一行二列标题|一行三列标题---|---|---二行一列|二行二列|二行三列三行一列|三行二列|三行三列","categories":[],"tags":[]},{"title":"CentOS 7.4配置ssh免密登录及出现的问题","slug":"CentOS 7.4配置ssh免密登录及出现的问题","date":"2019-05-16T03:03:27.365Z","updated":"2019-05-21T00:15:04.999Z","comments":true,"path":"2019/05/16/CentOS 7.4配置ssh免密登录及出现的问题/","link":"","permalink":"https://pushname.github.io/2019/05/16/CentOS 7.4配置ssh免密登录及出现的问题/","excerpt":"","text":"1 配置思路通过RSA加密算生成了密钥，包括私钥和公钥，我们把公钥追加到用来认证授权的key中去。每台机器配置本地免密登录，然后将其余每台机器生成的~/.ssh/id_dsa.pub公钥内容追加到其中一台主机的authorized_keys中，然后将这台机器中包括每台机器公钥的authorized_keys文件发送到集群中所有的服务器。这样集群中每台服务器都拥有所有服务器的公钥，这样集群间任意两台机器都可以实现免密登录了。配置四台虚拟机主机： master从机： slave1从机： slave2从机： slave3这四台虚拟机可以在VMware中配置好一台后进行复制，本篇所采用的的机器已经配置完jdk注：如果机器配置不够，仅仅为了学习的话可以不用配置那么多虚拟机2 第一台机器(master)的配置注意留意命令所处的文件夹！！要不然容易出错。（.ssh目录）2.1 生成公钥和密钥12// 生成公钥和密钥ssh-keygen -t rsa2.2 把公钥文件放入授权文件中12// 把公钥文件放入授权文件中cat id_rsa.pub &gt;&gt; authorized_keys2.3 写入认证文件12// 写入认证文件scp ~/.ssh/authorized_keys slave1:~/.ssh/注意这里写的是slave1不是主机名master如果是在slave1这个节点为初始状态时（未进行任何的ssh操作之前，根目录下没有.ssh目录）此时需要手动在slave1节点上，进行一次ssh操作，如：ssh slave1然后再执行这个命令会得到3 第二台机器(node1)3.1写入公钥和密钥1ssh-keygen -t rsa3.2 同上设置12cat id_rsa.pub &gt;&gt; authorized_keysscp ~/.ssh/authorized_keys slave2:~/.ssh/此时可能会出现同上问题4 第三台机器(node2)1234//同样的设置 也会出现相同的问题 就会有相同的解决方法 此时你应该能熟练的解决这个问题了ssh-keygen -t rsacat id_rsa.pub &gt;&gt; authorized_keysscp ~/.ssh/authorized_keys slave3:~/.ssh/5 第四台机器(node3)123456ssh-keygen -t rsacat id_rsa.pub &gt;&gt; authorized_keysscp ~/.ssh/authorized_keys master:~/.ssh/scp ~/.ssh/authorized_keys slave1:~/.ssh/scp ~/.ssh/authorized_keys slave2:~/.ssh/6 免密检查12//注意自己当前所处的目录在哪cat /.ssh/known_hosts如果没有的话，比如master没有，则需要在该机器上重新执行一下ssh master命令，让其生成以上信息即可。7 在node4中测试连接8 可能出现的问题8.1 如果# ssh master出现ssh: Could not resolve hostname ./id_rsa: Name or service not known12//检查能否ping从机的IP地址ping 192.168.56.202如果能ping通说明配置是没问题的1vi /etc/hosts在hosts文件中加入IP地址和主机名，实现两者的映射关系123127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4::1 localhost localhost.localdomain localhost6 localhost6.localdomain6192.168.56.202 slave28.2 如果用ssh时 提示WARNING: POSSIBLE DNS SPOOFING DETECTED123456789101112131415161718192021@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ WARNING: POSSIBLE DNS SPOOFING DETECTED! @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@The RSA host key for www.163.net has changed,and the key for the according IP address 158.252.167.117is unknown. This could either mean thatDNS SPOOFING is happening or the IP address for the hostand its host key have changed at the same time.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!Someone could be eavesdropping on you right now (man-in-the-middle attack)!It is also possible that the RSA host key has just been changed.The fingerprint for the RSA key sent by the remote host is11:8e:a8:b4:91:95:8b:15:82:b8:71:de:a7:c1:c0:aa.Please contact your system administrator.Add correct host key in /home/fuck/.ssh/known_hosts to get rid of this message.Offending key in /home/fuck/.ssh/known_hosts:1RSA host key for www.163.net has changed and you have requested strict checking.Host key verification failed.找到.ssh文件里的known_hosts文件12//在.ssh目录下执行删除操作然后再ssh即可rm known_hosts8.3 各虚拟机之间不能够免密登录12//在.ssh目录下将密钥拷贝到各个机器中[root@node2 .ssh]# ssh-copy-id hadoop","categories":[],"tags":[]}]}